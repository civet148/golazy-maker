// Code generated by golazy. DO NOT EDIT.
package handler

import (
	"github.com/civet148/log"

	"github.com/gin-gonic/gin"
	apiv1 "test/internal/handler/api/v1"

	apiv1user "test/internal/handler/api/v1/user"

	apiv1ws "test/internal/handler/api/v1/ws"

	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
	_ "test/docs"
	"test/internal/middleware"
	"test/internal/svc"
)

func RegisterHandlers(server *gin.Engine, serverCtx *svc.ServiceContext) {
	gapiv1 := server.Group("/api/v1")
	gapiv1.Use(middleware.NewCorsMiddleware().Handle())
	gapiv1.Use(middleware.NewJwtAuthMiddleware().Handle())
	{
		gapiv1.POST("/sign_in", apiv1.UserSignInHandler(serverCtx))
		gapiv1.POST("/sign_up", apiv1.UserSignUpHandler(serverCtx))
		gapiv1.POST("/sign_out", apiv1.UserSignOutHandler(serverCtx))
	}

	gapiv1user := server.Group("/api/v1/user")
	gapiv1user.Use(middleware.NewJwtAuthMiddleware().Handle())
	{
		gapiv1user.GET("/list", apiv1user.GetUserListHandler(serverCtx))
		gapiv1user.PUT("/add", apiv1user.AddUserHandler(serverCtx))
		gapiv1user.POST("/edit", apiv1user.EditUserHandler(serverCtx))
		gapiv1user.DELETE("/delete", apiv1user.DeleteUserHandler(serverCtx))
		gapiv1user.GET("/:id", apiv1user.GetUserByIdHandler(serverCtx))
	}

	gapiv1ws := server.Group("/api/v1/ws")
	{
		gapiv1ws.GET("/market", apiv1ws.WsMarketListHandler(serverCtx))
	}
	// add swagger route handler
	if serverCtx.Config.Mode == "dev" {
		server.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
		log.Infof("swagger running at http://%s:%v/swagger/index.html", serverCtx.Config.Host, serverCtx.Config.Port)
	}
}
